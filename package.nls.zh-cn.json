{
    "blueprintlua.java.home": "设置JAVA_HOME路径",
    "blueprintlua.source.roots": "设置source roots",
    "blueprintlua.completion.caseSensitive": "代码完成提示是否大小写敏感",
    "blueprintlua.codeLens": "是否显示codeLens（显示引用计数）",
    "blueprintlua.debugger.defaultProgram": "默认启动或调试的程序, 如 'c:/lua/lua.exe'",
    "blueprintlua.hint.paramHint": "开启函数调用的参数提示",
    "blueprintlua.hint.localHint": "开启local变量的类型提示",
    "blueprintlua.hint.varargHint": "开启可变参数的hint",
    "blueprintlua.hint.overrideHint": "方法覆盖夫类方法的override hint",
    "blueprintlua.constructor.names": "构造函数名称列表",
    "blueprintlua.requirelike.names": "设置类似require的函数名列表",
    "blueprintlua.typecheck.anyTypeCanAssignToAnyDefineType": "定义类型能接受any 类型的赋值",
    "blueprintlua.typecheck.defineAnyTypeCanBeAssignedByAnyVariable": "定义类型为any可以接受任何参数",
    "blueprintlua.typecheck.defineTypeCanReceiveNilType": "任何参数类型能接受nil",
    "blueprintlua.inspections.level.none": "不开启",
    "blueprintlua.inspections.level.warning": "视为警告",
    "blueprintlua.inspections.level.error": "视为错误",
    "blueprintlua.inspections.fieldValidation": "不存在子域检查",
    "blueprintlua.inspections.parameterValidation": "开启参数类型诊断",
    "blueprintlua.inspections.undeclaredVariable": "未声明变量检查",
    "blueprintlua.inspections.assignValidation": "赋值安全检查",
    "blueprintlua.inspections.deprecated": "开始弃用检查",
    "debug.attach.label": "blueprintLua: 通过进程ID附加",
    "debug.attach.name": "通过进程ID附加",
    "debug.attach.target_pid": "目标进程ID",
    "debug.attach.desc": "附加进程调试",
    "debug.attach.target_process": "通过名称过滤进程，如果目标唯一则直接附加",
    "debug.attach.captureLog": "捕获进程输出，显示在windows terminal上,该特性可能引发进程崩溃",
    "debug.launch.label": "blueprintLua: 启动并附加程序",
    "debug.launch.name": "启动并附加程序",
    "debug.launch.desc": "启动程序，并使用附加调试器附加到进程调试",
    "debug.launch.program": "启动并附加的可执行文件",
    "debug.launch.workingDir": "设置工作区",
    "debug.launch.arguments": "传递给可执行文件的参数",
    "debug.launch.blockOnExit": "进程结束时是否阻塞进程保持窗口开启",
    "debug.launch.useWindowsTerminal": "blueprintlua 使用windows terminal 打开进程"
}